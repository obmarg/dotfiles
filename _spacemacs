;; -*- mode: dotspacemacs -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in your home directory.

(defun dotspacemacs/layers ()
  "Configuration Layers declaration."
  (setq-default
   ;; List of additional paths where to look for configuration layers.
   ;; Paths must have a trailing slash (ie. `~/.mycontribs/')
   dotspacemacs-configuration-layer-path '("~/src/dotfiles/spacemacs.d/")
   ;; List of configuration layers to load. If it is the symbol `all' instead
   ;; of a list then all discovered layers will be installed.
   dotspacemacs-configuration-layers
   '(
     nginx
     ;; --------------------------------------------------------
     ;; Example of useful layers you may want to use right away
     ;; Uncomment a layer name and press C-c C-c to install it
     ;; --------------------------------------------------------
     (auto-completion :variables
                      auto-completion-use-tab-instead-of-enter t
                      auto-completion-enable-company-help-tooltip t)
     ;; better-defaults
     (git :variables
          git-gutter-use-fringe t
          git-enable-github-support t)
     markdown
     ;; org
     syntax-checking
     ;; --------------------------------------------------------
     ;; My Plugins!
     ;; --------------------------------------------------------

     ;; Look into ivy later.  Still seems to have a few issues.
     ;; Mostly just weird search behaviour:
     ;; seem to need to escape things at odd times, sometimes escape chars
     ;; break shit, sometimes it just looks like it's doing nothing.  It's super
     ;; strange and annoying.
     ;; ivy

     ;; Various languages
     javascript
     ;; Disabling rust because it's causing me problems and I don't need it.
     ;; rust
     (python :variables
             python-test-runner 'pytest
             python-auto-set-local-pyenv-version 'on-project-switch
             python-auto-set-local-pyvenv-virtualenv 'on-project-switch
             python-sort-imports-on-save t
             python-enable-yapf-format-on-save t)
     erlang
     elixir
     scala
     (clojure :variables
              clojure-enable-fancy-symbols t)
     (elm :variables
          elm-format-on-save t)
     nixos
     yaml
     ansible
     haskell
     rust
     go
     html
     purescript
     docker

     ;; Various Utilities
     theming
     themes-megapack
     osx
     github
     version-control
     eyebrowse
     spacemacs-layouts

     ; Plugins what I made
     hjson
     toggle-test
     git-conflict
     copy-code
     )
   ;; A list of packages and/or extensions that will not be install and loaded.
   dotspacemacs-excluded-packages '()
   ;; If non-nil spacemacs will delete any orphan packages, i.e. packages that
   ;; are declared in a layer which is not a member of
   ;; the list `dotspacemacs-configuration-layers'
   dotspacemacs-delete-orphan-packages t))

(defun dotspacemacs/init ()
  "Initialization function.
This function is called at the very startup of Spacemacs initialization
before layers configuration."
  ;; This setq-default sexp is an exhaustive list of all the supported
  ;; spacemacs settings.
  (setq-default
   ;; Either `vim' or `emacs'. Evil is always enabled but if the variable
   ;; is `emacs' then the `holy-mode' is enabled at startup.
   dotspacemacs-editing-style 'vim
   ;; If non nil output loading progess in `*Messages*' buffer.
   dotspacemacs-verbose-loading nil
   ;; Specify the startup banner. Default value is `official', it displays
   ;; the official spacemacs logo. An integer value is the index of text
   ;; banner, `random' chooses a random text banner in `core/banners'
   ;; directory. A string value must be a path to a .PNG file.
   ;; If the value is nil then no banner is displayed.
   ;; dotspacemacs-startup-banner 'official
   dotspacemacs-startup-banner 'official
   ;; t if you always want to see the changelog at startup
   dotspacemacs-always-show-changelog t
   ;; List of items to show in the startup buffer. If nil it is disabled.
   ;; Possible values are: `recents' `bookmarks' `projects'."
   dotspacemacs-startup-lists '(recents projects)
   ;; List of themes, the first of the list is loaded when spacemacs starts.
   ;; Press <SPC> T n to cycle to the next theme in the list (works great
   ;; with 2 themes variants, one dark and one light)
   dotspacemacs-themes '(;twilight-anti-bright
                         ;sanityinc-tomorrow-day
                         ;spacemacs-dark
                         ;spacemacs-light
                         darkokai
                         material-light
                         )
   ;; If non nil the cursor color matches the state color.
   dotspacemacs-colorize-cursor-according-to-state t
   ;; Default font. `powerline-scale' allows to quickly tweak the mode-line
   ;; size to make separators look not too crappy.
   dotspacemacs-default-font '("Dank Mono"
                               :size 16
                               :weight normal
                               :width normal
                               :powerline-scale 1.1)
   ;; The leader key
   dotspacemacs-leader-key "SPC"
   ;; The leader key accessible in `emacs state' and `insert state'
   dotspacemacs-emacs-leader-key "M-m"
   ;; Major mode leader key is a shortcut key which is the equivalent of
   ;; pressing `<leader> m`. Set it to `nil` to disable it.
   dotspacemacs-major-mode-leader-key ","
   ;; Major mode leader key accessible in `emacs state' and `insert state'
   dotspacemacs-major-mode-emacs-leader-key "C-M-m"
   ;; The command key used for Evil commands (ex-commands) and
   ;; Emacs commands (M-x).
   ;; By default the command key is `:' so ex-commands are executed like in Vim
   ;; with `:' and Emacs commands are executed with `<leader> :'.
   dotspacemacs-command-key ":"
   ;; If non nil the paste micro-state is enabled. While enabled pressing `p`
   ;; several times cycle between the kill ring content.
   dotspacemacs-enable-paste-micro-state t
   ;; Guide-key delay in seconds. The Guide-key is the popup buffer listing
   ;; the commands bound to the current keystrokes.
   dotspacemacs-guide-key-delay 0.4
   ;; If non nil a progress bar is displayed when spacemacs is loading. This
   ;; may increase the boot time on some systems and emacs builds, set it to
   ;; nil ;; to boost the loading time.
   dotspacemacs-loading-progress-bar t
   ;; If non nil the frame is fullscreen when Emacs starts up.
   ;; (Emacs 24.4+ only)
   dotspacemacs-fullscreen-at-startup nil
   ;; If non nil `spacemacs/toggle-fullscreen' will not use native fullscreen.
   ;; Use to disable fullscreen animations in OSX."
   dotspacemacs-fullscreen-use-non-native nil
   ;; If non nil the frame is maximized when Emacs starts up.
   ;; Takes effect only if `dotspacemacs-fullscreen-at-startup' is nil.
   ;; (Emacs 24.4+ only)
   dotspacemacs-maximized-at-startup nil
   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's active or selected.
   ;; Transparency can be toggled through `toggle-transparency'.
   dotspacemacs-active-transparency 90
   ;; A value from the range (0..100), in increasing opacity, which describes
   ;; the transparency level of a frame when it's inactive or deselected.
   ;; Transparency can be toggled through `toggle-transparency'.
   dotspacemacs-inactive-transparency 90
   ;; If non nil unicode symbols are displayed in the mode line.
   dotspacemacs-mode-line-unicode-symbols t
   ;; If non nil smooth scrolling (native-scrolling) is enabled. Smooth
   ;; scrolling overrides the default behavior of Emacs which recenters the
   ;; point when it reaches the top or bottom of the screen.
   dotspacemacs-smooth-scrolling t
   ;; If non-nil smartparens-strict-mode will be enabled in programming modes.
   dotspacemacs-smartparens-strict-mode nil
   ;; If non nil advises quit functions to keep server open when quitting.
   dotspacemacs-persistent-server t
   ;; List of search tool executable names. Spacemacs uses the first installed
   ;; tool of the list. Supported tools are `ag', `pt', `ack' and `grep'.
   dotspacemacs-search-tools '("ag" "pt" "ack" "grep")
   ;; The default package repository used if no explicit repository has been
   ;; specified with an installed package.
   ;; Not used for now.
   dotspacemacs-default-package-repository nil
   )
  ;; User initialization goes here
  (if (window-system) (set-frame-size (selected-frame) 130 47))
  )

(defun dotspacemacs/user-init ()
  "Initialization function for user code.
It is called immediately after `dotspacemacs/init', before layer configuration
executes.
 This function is mostly useful for variables that need to be set
before packages are loaded. If you are unsure, you should try in setting them in
`dotspacemacs/user-config' first."

  ; Make comments italic
  (setq theming-modifications '(
                                (darkokai
                                 (font-lock-comment-face :slant italic)
                                 (font-lock-doc-face :slant italic))
                                (material-light
                                 (font-lock-comment-face :slant italic)
                                 (font-lock-doc-face :slant italic)
                                 )))

  )

(defun dotspacemacs/user-config ()
  "Configuration function for user code.
This function is called at the very end of Spacemacs initialization after
layers configuration.
This is the place where most of your configurations should be done. Unless it is
explicitly specified that a variable should be set before a package is loaded,
you should place your code here."
  (setq magit-repo-dirs '("~/src/"))

  ; Disable Alt-[0-9], since my keyboard kinda needs Alt-3 for the hash key.
  (define-key winum-keymap "\M-0" nil)
  (define-key winum-keymap "\M-1" nil)
  (define-key winum-keymap "\M-2" nil)
  (define-key winum-keymap "\M-3" nil)
  (define-key winum-keymap "\M-4" nil)
  (define-key winum-keymap "\M-5" nil)
  (define-key winum-keymap "\M-6" nil)
  (define-key winum-keymap "\M-7" nil)
  (define-key winum-keymap "\M-8" nil)
  (define-key winum-keymap "\M-9" nil)
  ; Actually allow typing #
  (global-set-key (kbd "M-3") `(lambda () (interactive) (insert "#")))

  (add-hook 'alchemist-mode-hook 'company-mode)

  ; Remove that annoying % behaviour from python-mode.
  (remove-hook `python-mode-hook `turn-on-evil-matchit-mode)

  ; Load virtual env settings from dir-locals.el.
  (add-hook `python-mode-hook 'pyvenv-tracking-mode)

  ; (add-hook 'elixir-mode-hook 'flycheck-mode)

  (setq pytest-cmd-flags "-x -p no:sugar")

  (setq create-lockfiles nil)

  (add-hook 'before-save-hook 'whitespace-cleanup)

  (add-to-list 'tgt-projects '((:root-dir "~/src/connect")
                               (:src-dirs "connect")
                               (:test-dirs "test")
                               (:test-prefixes "test_")))
  (add-to-list 'tgt-projects '((:root-dir "~/src/chunnel")
                               (:src-dirs "chunnel")
                               (:test-dirs "test")
                               (:test-prefixes "test_")))

  ; Disable comment highlighting in spacemacs theme
  (setq spacemacs-theme-comment-bg nil)

  ; This setting is needed for macos
  (when (string= system-type "darwin")
    (setq dired-use-ls-dired nil))

  ; C-c C-e from wgrep should save buffers it changes
  (setq wgrep-auto-save-buffer t)

  ; Enable ligatures on mac
  (mac-auto-operator-composition-mode)
)



;; Do not write anything past this comment. This is where Emacs will
;; auto-generate custom variable definitions.
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ahs-case-fold-search nil t)
 '(ahs-default-range (quote ahs-range-whole-buffer) t)
 '(ahs-idle-interval 0.25 t)
 '(ahs-idle-timer 0 t)
 '(ahs-inhibit-face-list nil t)
 '(ansi-term-color-vector
   [unspecified "#14191f" "#d15120" "#81af34" "#deae3e" "#7e9fc9" "#a878b5" "#7e9fc9" "#dcdddd"] t)
 '(custom-safe-themes
   (quote
    ("fa2b58bb98b62c3b8cf3b6f02f058ef7827a8e497125de0254f56e373abee088" default)))
 '(evil-want-Y-yank-to-eol nil)
 '(fci-rule-character-color "#192028")
 '(package-selected-packages
   (quote
    (winum solarized-theme madhat2r-theme fuzzy flycheck-credo company-ansible org-category-capture org markdown-mode sbt-mode scala-mode diminish go-mode ghc multiple-cursors seq auto-complete avy anaconda-mode tern iedit f evil goto-chg undo-tree yasnippet skewer-mode js2-mode simple-httpd gh haml-mode s dockerfile-mode docker tablist docker-tramp dash async nginx-mode psci purescript-mode psc-ide wgrep smex ivy-hydra counsel-projectile counsel-dash counsel swiper ivy zenburn-theme ws-butler web-mode tao-theme spaceline racer persp-mode org-download neotree move-text moe-theme live-py-mode jazz-theme intero info+ hide-comnt help-fns+ helm-projectile helm-flx git-messenger git-gutter-fringe evil-surround evil-mc evil-escape column-enforce-mode color-theme-sanityinc-tomorrow clj-refactor cider cargo rust-mode apropospriate-theme alect-themes alchemist smartparens highlight elixir-mode flycheck haskell-mode autothemer company request helm helm-core pcache alert projectile magit magit-popup git-commit hydra spacemacs-theme zonokai-theme zen-and-art-theme yapfify yaml-mode with-editor window-numbering which-key web-beautify volatile-highlights vi-tilde-fringe uuidgen use-package underwater-theme ujelly-theme twilight-theme twilight-bright-theme twilight-anti-bright-theme tronesque-theme toxi-theme toml-mode toggle-test toc-org tangotango-theme tango-plus-theme tango-2-theme tagedit sunny-day-theme sublime-themes subatomic256-theme subatomic-theme spacegray-theme soothe-theme soft-stone-theme soft-morning-theme soft-charcoal-theme smyx-theme smeargle slim-mode seti-theme scss-mode sass-mode reverse-theme reveal-in-osx-finder restart-emacs rainbow-delimiters railscasts-theme queue quelpa pyvenv pytest pyenv-mode py-isort purple-haze-theme pug-mode professional-theme powerline popwin planet-theme pkg-info pip-requirements phoenix-dark-pink-theme phoenix-dark-mono-theme pcre2el pbcopy pastels-on-dark-theme paredit paradox osx-trash osx-dictionary orgit organic-green-theme org-projectile org-present org-pomodoro org-plus-contrib org-bullets open-junk-file omtose-phellack-theme oldlace-theme occidental-theme obsidian-theme ob-elixir noflet noctilux-theme nix-mode niflheim-theme naquadah-theme mustang-theme monokai-theme monochrome-theme molokai-theme mmm-mode minimal-theme material-theme markdown-toc majapahit-theme magit-gitflow magit-gh-pulls lush-theme lorem-ipsum log4e livid-mode linum-relative link-hint light-soap-theme less-css-mode launchctl json-mode js2-refactor js-doc jinja2-mode jbeans-theme ir-black-theme inkpot-theme inflections indent-guide ido-vertical-mode hy-mode hungry-delete htmlize hlint-refactor hl-todo hindent highlight-parentheses highlight-numbers highlight-indentation heroku-theme hemisu-theme helm-themes helm-swoop helm-pydoc helm-nixos-options helm-mode-manager helm-make helm-hoogle helm-gitignore helm-descbinds helm-dash helm-css-scss helm-company helm-c-yasnippet helm-ag hc-zenburn-theme haskell-snippets gruvbox-theme gruber-darker-theme grandshell-theme gotham-theme google-translate golden-ratio go-guru go-eldoc gnuplot gntp github-search github-clone github-browse-file gitconfig-mode gitattributes-mode git-timemachine git-link git-gutter-fringe+ git-gutter gist gh-md gandalf-theme flycheck-rust flycheck-pos-tip flycheck-mix flycheck-haskell flycheck-elm flx-ido flatui-theme flatland-theme firebelly-theme fill-column-indicator farmhouse-theme fancy-battery eyebrowse expand-region exec-path-from-shell evil-visualstar evil-visual-mark-mode evil-unimpaired evil-tutor evil-search-highlight-persist evil-numbers evil-nerd-commenter evil-matchit evil-magit evil-lisp-state evil-indent-plus evil-iedit-state evil-exchange evil-ediff evil-args evil-anzu espresso-theme erlang ensime emmet-mode elm-mode edn dumb-jump dracula-theme django-theme diff-hl dash-at-point darktooth-theme darkokai-theme darkmine-theme darkburn-theme dakrone-theme cython-mode cyberpunk-theme company-web company-tern company-statistics company-nixos-options company-go company-ghci company-ghc company-cabal company-anaconda color-theme-sanityinc-solarized coffee-mode cmm-mode clues-theme clojure-snippets clojure-mode clean-aindent-mode cider-eval-sexp-fu cherry-blossom-theme busybee-theme bubbleberry-theme birds-of-paradise-plus-theme badwolf-theme auto-yasnippet auto-highlight-symbol anti-zenburn-theme ansible-doc ansible ample-zen-theme ample-theme aggressive-indent afternoon-theme adaptive-wrap ace-window ace-link ace-jump-helm-line ac-ispell)))
 '(paradox-github-token t)
 '(psc-ide-add-import-on-completion t t)
 '(psc-ide-rebuild-on-save nil t)
 '(ring-bell-function (quote ignore))
 '(safe-local-variable-values
   (quote
    ((flycheck-checker . hjson-python)
     (py-yapf-options "--in-place" "--style" "/Users/graeme/src/connect/.style.yapf")
     (pyvenv-workon . "connect"))))
 '(send-mail-function (quote mailclient-send-it)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
