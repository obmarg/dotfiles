
# Load custom profiles first
if [ -e ~/.profile ] ; then
    source ~/.profile
fi

if [ -e ~/.localrc ] ; then
    source ~/.localrc
fi

setopt histignorespace

# oh-my-zsh needs these set in order to work with anti-body
export DISABLE_AUTO_UPDATE=true
export ZSH="$(antibody home)/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh"

source <(antibody init)

# Check the current platform
platform='unknown'
unamestr=`uname`
if [[ $unamestr == 'Linux' ]]; then
    platform='linux'
elif [[ $unamestr == 'Darwin' ]]; then
    platform='macos'
fi

antibody bundle robbyrussell/oh-my-zsh
antibody bundle robbyrussell/oh-my-zsh folder:plugins/gitfast
antibody bundle robbyrussell/oh-my-zsh folder:plugins/git-flow
antibody bundle robbyrussell/oh-my-zsh folder:plugins/github
antibody bundle robbyrussell/oh-my-zsh folder:plugins/mercurial
antibody bundle robbyrussell/oh-my-zsh folder:plugins/node
antibody bundle robbyrussell/oh-my-zsh folder:plugins/npm
antibody bundle robbyrussell/oh-my-zsh folder:plugins/pip
antibody bundle robbyrussell/oh-my-zsh folder:plugins/python
antibody bundle robbyrussell/oh-my-zsh folder:plugins/lein
antibody bundle robbyrussell/oh-my-zsh folder:plugins/rsync
antibody bundle robbyrussell/oh-my-zsh folder:plugins/cp
antibody bundle robbyrussell/oh-my-zsh folder:plugins/bower
antibody bundle robbyrussell/oh-my-zsh folder:plugins/colored-man-pages
antibody bundle robbyrussell/oh-my-zsh folder:plugins/vundle
antibody bundle robbyrussell/oh-my-zsh folder:plugins/coffee
antibody bundle robbyrussell/oh-my-zsh folder:plugins/vagrant
antibody bundle $HOME/src/dotfiles/zsh/pyenv
antibody bundle $HOME/src/dotfiles/zsh/asdf

antibody bundle zsh-users/zsh-completions
antibody bundle zsh-users/zsh-syntax-highlighting

if [[ $platform == 'linux' ]]; then
    antibody bundle robbyrussell/oh-my-zsh folder:debian
    antibody bundle robbyrussell/oh-my-zsh folder:ssh-agent
elif [[ $platform == 'macos' ]]; then
    antibody bundle robbyrussell/oh-my-zsh folder:macports
    antibody bundle robbyrussell/oh-my-zsh folder:osx
    antibody bundle robbyrussell/oh-my-zsh folder:brew
fi

antibody bundle $HOME/src/dotfiles/zsh/norm-theme/

vundle-init

PROMPT='%{$fg[yellow]%}λ %{$fg[green]%}%m %{$fg[yellow]%}λ %{$fg[green]%}%c$(git_prompt_info)%{$fg[yellow]%} → %{$reset_color%}'

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg[yellow]%} λ %{$fg[blue]%}git %{$fg[red]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX=""

# Globbing tends to brake some rake functionality, so disable it
alias rake="noglob rake"
# Update some git aliases to personal versions
alias gst='git st'
alias gd='git diff'

# Publish current branch
alias gpub='git push -u origin $(current_branch)'

# Pull & Rebase
alias glr='git pull --rebase'

# Edit & add conflict files
alias gec='git status -sb | grep ^UU | cut -d" " -f 2 | xargs mvim'
alias gac='git status -sb | grep ^UU | cut -d" " -f 2 | xargs git add'

# Some git flow aliases
alias gf="git flow"
alias gff="git flow feature"
alias gffs="git flow feature start"
alias gfff="git flow feature finish"
alias gffc="git flow feature checkout"

# Ordered du alias
alias duc='du -s ./* | sort -n | cut -f 2- | sed "s/\(.*\)/\"\1\"/" | xargs -Ix du -sh x'
alias dua='du -a | sort -n | cut -f 2- | sed "s/\(.*\)/\"\1\"/" | xargs -Ix du -sh x'

# Count lines of code
if [[ `uname` == "Linux" ]] ; then
    alias loc='find -regextype posix-extended -regex ".*\.(cpp|c|h|hpp|py|coffee|clj|go|hs|erl|ex|exs)$" | xargs -n1 wc -l | cut -f1 -d"." | paste -sd+ - | bc'
else
    alias loc='find -E . -regex ".*\.(cpp|c|h|hpp|py|coffee|clj|go|hs|erl|ex|exs|cljs)$" | xargs -n1 wc -l | cut -f1 -d"." | paste -sd+ - | bc'
fi

# Nicer default df & free behaviour
alias df='df -h'
alias free='free -m'

# zmv ftw
autoload -U zmv
# alias for zmv for no quotes
# mmv *.c.orig orig/*.c
alias mmv='noglob zmv -W'

# Function for making a python package
function mkpypack {
    mkdir $1
    touch $1/__init__.py
}
alias mkp='mkpypack'

# Setup map alias to run a command on piped output
alias map='xargs -n1'

# cd to root of git repository
function cdr {
    cd $(git rev-parse --show-toplevel 2> /dev/null)
}

# TODO: Write similar cd function for hg

# Rolepoint app shortcut.  Seperate commands to allow the virtualenv stuff to
# work
alias rpa='cd src && cd rolepoint-app && workon rolepoint-app'

function fuck() {
  if killall -9 "$2"; then
    echo ; echo " (╯°□°）╯︵$(echo "$2"|toilet -f term -F rotate)"; echo
  fi
}

function portslay () {
   # portslay:  kill the task active on the specified TCP port
   kill -9 `lsof -i tcp:$1 | tail -1 | awk '{ print $2;}'`
}

function gdistremote () {
    # Adds a remote that can be pushed to.
    # Idea stolen from https://glyph.twistedmatrix.com/2014/09/actually-distributed.html
    # but put into this function because i'll never remember the exact commands.
    # Takes the 2 required args to git remote add
    git remote add $1 $2
    git config remote.$1.push '+refs/heads/*:refs/remotes/$(hostname)/*'
}

alias ipy='ptipython --vi'

if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Switch project & switch thirdparty project aliases
alias sw='cd ~/src/$(ls ~/src | fzf)'
alias swt='cd ~/src/thirdparty/$(ls ~/src/thirdparty | fzf)'

[ -d ~/.local/bin ] && export PATH=$PATH:~/.local/bin

alias gsl='git shortlog --no-merges'
